# Triggers are currently handled by branch policy for build validation in azure devops
trigger: none
# trigger:
#   batch: true
#   branches:
#     include:
#       - master

stages:
  - stage: 'all'
    jobs:
    - job: 'CI_no_license'
      pool:
        name: CI_no_license
      steps:
      # Print the pwd to make it easier to find the area where this was run
      - script: |
          pwd
        displayName: 'Display PWD'

      - script: |
          source activate digital
          yapf --diff --recursive . --style env/.style.yapf
        # Do an automatic regen with
        # yapf --in-place --recursive . --style env/.style.yapf
        displayName: 'yapf Check'

      - script: |
          source activate digital
          bazel run --nokeep_state_after_build //tests:buildifier_format_diff
          bazel run --nokeep_state_after_build //tests:buildifier_lint
        displayName: 'BUILD Lint Check'
       
      - script: |
         bazel clean --expunge
         ./tests/doc_test.sh
        displayName: 'Doc Generation Check'

      - script: |
          source activate digital
          bazel test --cache_test_results=no --jobs 8 --test_output=all $(bazel query "tests(//...) except attr(tags, 'no_ci_gate', //...) except attr(tags, 'requires_license', //...)")
        displayName: 'Bazel tests (no licenses)'

      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: 'bazel-testlogs/**/*.xml'
          testRunTitle: 'Publish test results.'
        displayName: 'Bazel Tests'

    - job: 'CI'
      pool:
        name: CI
      steps:
      # Print the pwd to make it easier to find the area where this was run
      - script: |
          pwd
        displayName: 'Display PWD'

      - bash: |
          source activate digital
          find -L `bazel info bazel-testlogs` -name "test.xml" | xargs rm
          bazel test --cache_test_results=no --jobs 8 --test_output=all $(bazel query "attr(tags, 'requires_license', tests(//...)) except attr(tags, 'no_ci_gate', //...)")
        displayName: 'Bazel Tests'

      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: 'bazel-testlogs/**/*.xml'
          testRunTitle: 'Publish test results.'
        displayName: 'Bazel Tests Publish Results'
