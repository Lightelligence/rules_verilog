#!/usr/bin/bash
# This is a template for the bazel verilog_rtl_unit_test rule in order to run a SVUnit testbench
# It is not intended to be run stand-alone
# See http://agilesoc.com/open-source-projects/svunit/
set -e

generate_waves=0
launch_wave_viewer=0
remaining_args=()

while (( $# ))
do
    case $1 in
        "--waves" )
            generate_waves=1
            ;;
        "--launch" )
            launch_wave_viewer=1
            ;;
        *)
            remaining_args+=($1)
            ;;    
    esac
    shift
done

waves_render_cmd=""
if [ $generate_waves -eq 1 ]
then
    waves_render_cmd="-r '-input {WAVES_RENDER_CMD_PATH}' -r '-access r'"
fi

waves_launch_cmd=""
if [ $launch_wave_viewer -eq 1 ]
then
    waves_render_cmd="-r '-input {WAVES_RENDER_CMD_PATH}' -r '-access r'"
    waves_launch_cmd="{WAVE_VIEWER_COMMAND} waves.shm"
fi

{SIMULATOR_COMMAND} \
    runSVUnit \
    -s xcelium \
    --no_abs_path_flist \
    --no_feedback \
    {PRE_FLIST_ARGS} \
    -o . \
    -c '-define\ TBV' \
    -c '-libext\ .sv' \
    -c '-libext\ .svh' \
    -c '-libext\ .v' \
    -c '-libext\ .vams' \
    -c '-disable_sem2009' \
    -c '-enable_single_yvlib' \
    -c '-licqueue' \
    -c '-timescale\ 100fs/100fs' \
    -c '-vtimescale\ 100fs/100fs' \
    -c '-define\ TIMESCALE_STEP_FS=100' \
    -c '-define\ TIMESCALE_PREC_FS=100' \
    {FLISTS} \
    $waves_render_cmd \
    {POST_FLIST_ARGS}
    ${remaining_args[@]};
$waves_launch_cmd

grep -q "\[testrunner\]: PASSED" run.log
